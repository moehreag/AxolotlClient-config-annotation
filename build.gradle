plugins {
	id 'maven-publish'
	alias libs.plugins.quilt.loom
}

archivesBaseName = project.archives_base_name
version = "${project.version}+${libs.versions.minecraft.get()}"
group = project.maven_group

repositories {
	mavenLocal()
	maven {
		url = "https://moehreag.duckdns.org/maven/releases"
	}

	maven { // because there are no transitive repositories via maven, only transitive dependencies
		url 'https://repo.hypixel.net/repository/Hypixel/'
	}

	maven { url 'https://jitpack.io' }
	mavenCentral()
}

// All the dependencies are declared at gradle/libs.version.toml and referenced with "libs.<id>"
// See https://docs.gradle.org/current/userguide/platforms.html for information on how version catalogs work.
dependencies {
	minecraft libs.minecraft
	mappings variantOf(libs.quilt.mappings) { classifier 'intermediary-v2' }

	modImplementation libs.quilt.loader

	modImplementation libs.axolotlclient.config
	include libs.axolotlclient.config

	modImplementation("io.github.axolotlclient:AxolotlClient-config:1.0.17+1.19.3")

	// this is only on our mavenLocal until now. No, this is not ideal.
	//modImplementation("io.github.axolotlclient:AxolotlClient-modmenu:1.1.1+1.19.3")
}

processResources {
	inputs.property 'version', version

	filesMatching('quilt.mod.json') {
		expand "version": version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = 'UTF-8'
}

java {
	// Still required by IDEs such as Eclipse and Visual Studio Code
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17

	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	// If this mod is going to be a library, then it should also generate Javadocs in order to aid with development.
	// Uncomment this line to generate them.
	withJavadocJar()
}

jar {
	filesMatching('LICENSE') {
		rename '^(LICENSE.*?)(\\..*)?$', "\$1_${archivesBaseName}\$2"
	}
}
